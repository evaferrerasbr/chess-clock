{"version":3,"sources":["images/logo.png","components/Header.js","components/PredefinedSettings.js","components/Form/InputTotalMinutes.js","components/Form/InputIncAfterEachPlay.js","components/Form/InputPlayNumber.js","components/Form/InputIncOfMinutes.js","components/Form/SetupForm.js","components/Landing.js","components/Clock.js","images/arrows.svg","components/ClocksPage.js","images/timeout.gif","components/GameOver.js","components/Footer.js","components/App.js","services/localstorage.js","index.js"],"names":["Header","className","src","logo","alt","PredefinedSettings","props","handlePredefinedSettings","handleClick","ev","currentTarget","id","minutes","seconds","onClick","InputTotalMinutes","totalMinutes","handleInputChange","htmlFor","type","name","value","onChange","data","InputIncAfterEachPlay","incAfterEachPlay","InputPlayNumber","playNumber","defaultProps","InputIncOfMinutes","incOfMinutes","SetupForm","handleReset","Landing","formIsFilled","to","disabled","Clock","counter","colour","Math","floor","ClocksPage","whiteCounter","blackCounter","whitesForLeft","handleClockColours","isStarted","isStopped","handleStart","handleStop","handleContinue","handleMouseDown","onMouseDown","arrows","GameOver","timeout","Footer","dataLocal","JSON","parse","localStorage","getItem","afterFirstTurn","whitesTurn","numberOfPlays","getFromLocalStorage","App","useState","setTotalMinutes","setIncAfterEachPlay","setPlayNumber","setIncOfMinutes","setFormIsFilled","setWhitesForLeft","setWhiteCounter","setBlackCounter","setAfterFirstTurn","setWhitesTurn","setNumberOfPlays","setIsStarted","setIsStopped","useEffect","interval","setInterval","clearInterval","handleKeyUp","window","addEventListener","removeEventListener","handleTouchStart","parseInt","setItem","stringify","setLocalStorage","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1d9209f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.5bb78912.png\";","import logo from '../images/logo.png';\r\nimport '../stylesheets/Header.scss';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"Header\">\r\n      <img className=\"Header__img\" src={logo} alt=\"Logo\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import PropTypes from 'prop-types';\r\nimport '../stylesheets/PredefinedSettings.scss';\r\n\r\nfunction PredefinedSettings(props) {\r\n  const { handlePredefinedSettings } = props;\r\n\r\n  const handleClick = (ev) => {\r\n    if (ev.currentTarget.id === '3') {\r\n      const data = {\r\n        minutes: '3',\r\n        seconds: '2',\r\n      };\r\n      handlePredefinedSettings(data);\r\n    } else if (ev.currentTarget.id === '5') {\r\n      const data = {\r\n        minutes: '5',\r\n        seconds: '3',\r\n      };\r\n      handlePredefinedSettings(data);\r\n    } else if (ev.currentTarget.id === '10') {\r\n      const data = {\r\n        minutes: '10',\r\n        seconds: '10',\r\n      };\r\n      handlePredefinedSettings(data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <article className=\"PredefinedSettings\">\r\n      <h3 className=\"PredefinedSettings__title\">Predefined options</h3>\r\n      <div className=\"PredefinedSettings__wrapper\">\r\n        <button\r\n          className=\"PredefinedSettings__button\"\r\n          id=\"3\"\r\n          onClick={handleClick}\r\n        >\r\n          3 + 2\r\n        </button>\r\n        <button\r\n          className=\"PredefinedSettings__button\"\r\n          id=\"5\"\r\n          onClick={handleClick}\r\n        >\r\n          5 + 3\r\n        </button>\r\n        <button\r\n          className=\"PredefinedSettings__button\"\r\n          id=\"10\"\r\n          onClick={handleClick}\r\n        >\r\n          10 + 10\r\n        </button>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nPredefinedSettings.propTypes = {\r\n  handlePredefinedSettings: PropTypes.func,\r\n};\r\n\r\nexport default PredefinedSettings;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction InputTotalMinutes(props) {\r\n  const { totalMinutes, handleInputChange } = props;\r\n\r\n  const handleChange = (ev) => {\r\n    const data = {\r\n      name: ev.currentTarget.id,\r\n      value: ev.currentTarget.value,\r\n    };\r\n    handleInputChange(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label\r\n        className=\"SetupForm__label SetupForm__label\"\r\n        htmlFor=\"totalMinutes\"\r\n      >\r\n        <input\r\n          className=\"SetupForm__input\"\r\n          id=\"totalMinutes\"\r\n          type=\"number\"\r\n          name=\"totalMinutes\"\r\n          value={totalMinutes}\r\n          onChange={handleChange}\r\n        />\r\n        Total minutes for each player\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nInputTotalMinutes.propTypes = {\r\n  totalMinutes: PropTypes.string,\r\n  handleInputChange: PropTypes.func,\r\n};\r\n\r\nexport default InputTotalMinutes;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction InputIncAfterEachPlay(props) {\r\n  const { incAfterEachPlay, handleInputChange } = props;\r\n\r\n  const handleChange = (ev) => {\r\n    const data = {\r\n      name: ev.currentTarget.id,\r\n      value: ev.currentTarget.value,\r\n    };\r\n    handleInputChange(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className=\"SetupForm__label\" htmlFor=\"incAfterEachPlay\">\r\n        <input\r\n          className=\"SetupForm__input\"\r\n          id=\"incAfterEachPlay\"\r\n          type=\"number\"\r\n          name=\"incAfterEachPlay\"\r\n          value={incAfterEachPlay}\r\n          onChange={handleChange}\r\n        />\r\n        Increment of <span className=\"SetupForm__bold\">seconds</span> after each\r\n        play\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nInputIncAfterEachPlay.propTypes = {\r\n  incAfterEachPlay: PropTypes.string,\r\n  handleInputChange: PropTypes.func,\r\n};\r\n\r\nexport default InputIncAfterEachPlay;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction InputPlayNumber(props) {\r\n  const { playNumber, handleInputChange } = props;\r\n\r\n  const handleChange = (ev) => {\r\n    const data = {\r\n      name: ev.currentTarget.id,\r\n      value: ev.currentTarget.value,\r\n    };\r\n    handleInputChange(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className=\"SetupForm__label SetupForm__label\" htmlFor=\"playNumber\">\r\n        <input\r\n          className=\"SetupForm__input\"\r\n          id=\"playNumber\"\r\n          type=\"number\"\r\n          name=\"playNumber\"\r\n          value={playNumber}\r\n          onChange={handleChange}\r\n        />\r\n        Play number\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nInputPlayNumber.defaultProps = {\r\n  playNumber: '0',\r\n};\r\n\r\nInputPlayNumber.propTypes = {\r\n  playNumber: PropTypes.string,\r\n  handleInputChange: PropTypes.func,\r\n};\r\n\r\nexport default InputPlayNumber;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction InputIncOfMinutes(props) {\r\n  const { incOfMinutes, handleInputChange } = props;\r\n\r\n  const handleChange = (ev) => {\r\n    const data = {\r\n      name: ev.currentTarget.id,\r\n      value: ev.currentTarget.value,\r\n    };\r\n    handleInputChange(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className=\"SetupForm__label\" htmlFor=\"incOfMinutes\">\r\n        <input\r\n          className=\"SetupForm__input\"\r\n          id=\"incOfMinutes\"\r\n          type=\"number\"\r\n          name=\"incOfMinutes\"\r\n          value={incOfMinutes}\r\n          onChange={handleChange}\r\n        />\r\n        Increment of <span className=\"SetupForm__bold\">minutes</span> after\r\n        selected play\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nInputIncOfMinutes.defaultProps = {\r\n  incOfMinutes: '0',\r\n};\r\n\r\nInputIncOfMinutes.propTypes = {\r\n  incOfMinutes: PropTypes.string,\r\n  handleInputChange: PropTypes.func,\r\n};\r\n\r\nexport default InputIncOfMinutes;\r\n","import PropTypes from 'prop-types';\r\nimport InputTotalMinutes from './InputTotalMinutes';\r\nimport InputIncAfterEachPlay from './InputIncAfterEachPlay';\r\nimport InputPlayNumber from './InputPlayNumber';\r\nimport InputIncOfMinutes from './InputIncOfMinutes';\r\nimport '../../stylesheets/SetupForm.scss';\r\n\r\nfunction SetupForm(props) {\r\n  const {\r\n    totalMinutes,\r\n    incAfterEachPlay,\r\n    playNumber,\r\n    incOfMinutes,\r\n    handleInputChange,\r\n    handleReset,\r\n  } = props;\r\n\r\n  const handleClick = () => {\r\n    handleReset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"SetupForm\">\r\n        <h3 className=\"SetupForm__title\">Personalize your game</h3>\r\n        <div className=\"SetupForm__wrapper SetupForm__wrapper--up\">\r\n          <InputTotalMinutes\r\n            totalMinutes={totalMinutes}\r\n            handleInputChange={handleInputChange}\r\n          />\r\n          <InputIncAfterEachPlay\r\n            incAfterEachPlay={incAfterEachPlay}\r\n            handleInputChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"SetupForm__wrapper SetupForm__wrapper--down\">\r\n          <InputPlayNumber\r\n            playNumber={playNumber}\r\n            handleInputChange={handleInputChange}\r\n          />\r\n          <InputIncOfMinutes\r\n            incOfMinutes={incOfMinutes}\r\n            handleInputChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"SetupForm__button SetupForm__button--reset\"\r\n          type=\"button\"\r\n          onClick={handleClick}\r\n        >\r\n          Reset\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nSetupForm.propTypes = {\r\n  totalMinutes: PropTypes.string,\r\n  incAfterEachPlay: PropTypes.string,\r\n  playNumber: PropTypes.string,\r\n  incOfMinutes: PropTypes.string,\r\n  handleInputChange: PropTypes.func,\r\n  handleReset: PropTypes.func,\r\n};\r\n\r\nexport default SetupForm;\r\n","import { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport PredefinedSettings from './PredefinedSettings';\r\nimport SetupForm from './Form/SetupForm';\r\nimport '../stylesheets/Landing.scss';\r\n\r\nfunction Landing(props) {\r\n  const {\r\n    totalMinutes,\r\n    incAfterEachPlay,\r\n    playNumber,\r\n    incOfMinutes,\r\n    formIsFilled,\r\n    handleInputChange,\r\n    handlePredefinedSettings,\r\n    handleReset,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      <section className=\"Landing__options\">\r\n        <PredefinedSettings\r\n          handlePredefinedSettings={handlePredefinedSettings}\r\n        />\r\n        <SetupForm\r\n          totalMinutes={totalMinutes}\r\n          incAfterEachPlay={incAfterEachPlay}\r\n          playNumber={playNumber}\r\n          incOfMinutes={incOfMinutes}\r\n          formIsFilled={formIsFilled}\r\n          handleInputChange={handleInputChange}\r\n          handleReset={handleReset}\r\n        />\r\n        <div className=\"Landing__wrapper\">\r\n          {formIsFilled ? (\r\n            <button className=\"Landing__button\" type=\"button\">\r\n              <Link\r\n                className=\"Landing__button Landing__button--link\"\r\n                to=\"/game\"\r\n              >\r\n                Next\r\n              </Link>\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"Landing__button Landing__button--disabled\"\r\n              type=\"button\"\r\n              disabled\r\n            >\r\n              Next\r\n            </button>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nLanding.propTypes = {\r\n  totalMinutes: PropTypes.string,\r\n  incAfterEachPlay: PropTypes.string,\r\n  playNumber: PropTypes.string,\r\n  incOfMinutes: PropTypes.string,\r\n  formIsFilled: PropTypes.bool,\r\n  handleInputChange: PropTypes.func,\r\n  handlePredefinedSettings: PropTypes.func,\r\n  handleReset: PropTypes.func,\r\n};\r\n\r\nexport default Landing;\r\n","import PropTypes from 'prop-types';\r\nimport '../stylesheets/Clock.scss';\r\n\r\nfunction Clock(props) {\r\n  const { counter, colour } = props;\r\n\r\n  const selectCounter = () => {\r\n    if (counter > 200) {\r\n      if (counter % 600 < 100) {\r\n        return (\r\n          <p className=\"Clock__numbers\">\r\n            {Math.floor(counter / 600)}:{`0${Math.floor(counter / 10) % 60}`}\r\n          </p>\r\n        );\r\n      } else {\r\n        return (\r\n          <p className=\"Clock__numbers\">\r\n            {Math.floor(counter / 600)}:{Math.floor(counter / 10) % 60}\r\n          </p>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <p className=\"Clock__numbers\">\r\n          {Math.floor(counter / 10) % 60}.{counter % 10}\r\n        </p>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <article\r\n      className={`Clock ${\r\n        colour === 'white' ? 'Clock--white' : 'Clock--black'\r\n      }`}\r\n    >\r\n      <div className=\"Clock__screen\">{selectCounter()}</div>\r\n    </article>\r\n  );\r\n}\r\n\r\nClock.propTypes = {\r\n  counter: PropTypes.number,\r\n  colour: PropTypes.string,\r\n};\r\n\r\nexport default Clock;\r\n","export default __webpack_public_path__ + \"static/media/arrows.96b49b92.svg\";","import { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Clock from './Clock';\r\nimport arrows from '../images/arrows.svg';\r\nimport '../stylesheets/ClocksPage.scss';\r\n\r\nfunction ClocksPage(props) {\r\n  const {\r\n    whiteCounter,\r\n    blackCounter,\r\n    whitesForLeft,\r\n    handleClockColours,\r\n    isStarted,\r\n    isStopped,\r\n    handleStart,\r\n    handleStop,\r\n    handleContinue,\r\n  } = props;\r\n\r\n  const handleMouseDown = () => {\r\n    if (!isStarted) {\r\n      handleStart();\r\n    } else if (isStarted && !isStopped) {\r\n      handleStop();\r\n    } else if (isStarted && isStopped) {\r\n      handleContinue();\r\n    }\r\n  };\r\n\r\n  const changeButtons = () => {\r\n    if (!isStarted) {\r\n      return (\r\n        <button\r\n          className=\"ClocksPage__button ClocksPage__button--start\"\r\n          type=\"button\"\r\n          onMouseDown={handleMouseDown}\r\n        >\r\n          Start\r\n        </button>\r\n      );\r\n    } else if (isStarted && !isStopped) {\r\n      return (\r\n        <button\r\n          className=\"ClocksPage__button ClocksPage__button--stop\"\r\n          type=\"button\"\r\n          onMouseDown={handleMouseDown}\r\n        >\r\n          Stop\r\n        </button>\r\n      );\r\n    } else if (isStarted && isStopped) {\r\n      return (\r\n        <button\r\n          className=\"ClocksPage__button ClocksPage__button--start\"\r\n          type=\"button\"\r\n          onMouseDown={handleMouseDown}\r\n        >\r\n          Continue\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    handleClockColours();\r\n  };\r\n\r\n  return (\r\n    <section className=\"ClocksPage\">\r\n      <h2 className=\"ClocksPage__title\">\r\n        Start and press any key to change turns\r\n      </h2>\r\n      {changeButtons()}\r\n      <img\r\n        className=\"ClocksPage__img\"\r\n        src={arrows}\r\n        alt=\"Change colours\"\r\n        onClick={handleClick}\r\n      />\r\n      <article className=\"ClocksPage__clocks\">\r\n        <Clock\r\n          counter={whitesForLeft ? whiteCounter : blackCounter}\r\n          colour={whitesForLeft ? 'white' : 'black'}\r\n        />\r\n        <Clock\r\n          counter={whitesForLeft ? blackCounter : whiteCounter}\r\n          colour={whitesForLeft ? 'black' : 'white'}\r\n        />\r\n      </article>\r\n      <button className=\"ClocksPage__button\" type=\"button\">\r\n        <Link className=\"ClocksPage__button--link\" to=\"/\">\r\n          Go back\r\n        </Link>\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\n\r\nClocksPage.propTypes = {\r\n  whiteCounter: PropTypes.number,\r\n  blackCounter: PropTypes.number,\r\n  whitesForLeft: PropTypes.bool,\r\n  handleClockColours: PropTypes.func,\r\n  isStarted: PropTypes.bool,\r\n  isStopped: PropTypes.bool,\r\n  handleStart: PropTypes.func,\r\n  handleStop: PropTypes.func,\r\n  handleContinue: PropTypes.func,\r\n};\r\n\r\nexport default ClocksPage;\r\n","export default __webpack_public_path__ + \"static/media/timeout.39d09c9f.gif\";","import { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport timeout from '../images/timeout.gif';\r\nimport '../stylesheets/GameOver.scss';\r\n\r\nfunction GameOver(props) {\r\n  const { whiteCounter, blackCounter, handleReset } = props;\r\n\r\n  const handleClick = () => {\r\n    handleReset();\r\n  };\r\n\r\n  const getFallenFlag = () => {\r\n    if (whiteCounter === 0) {\r\n      return <p className=\"GameOver__text\">The white player's flag falls</p>;\r\n    } else if (blackCounter === 0) {\r\n      return <p className=\"GameOver__text\">The black player's flag falls</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <article className=\"GameOver\">\r\n      {getFallenFlag()}\r\n      <img className=\"GameOver__img\" src={timeout} alt=\"The time is out\" />\r\n      <button className=\"GameOver__button\" onClick={handleClick}>\r\n        <Link className=\"GameOver__button--link\" to=\"/\">\r\n          Rematch?\r\n        </Link>\r\n      </button>\r\n    </article>\r\n  );\r\n}\r\n\r\nGameOver.propTypes = {\r\n  whiteCounter: PropTypes.number,\r\n  blackCounter: PropTypes.number,\r\n  handleReset: PropTypes.func,\r\n};\r\n\r\nexport default GameOver;\r\n","import '../stylesheets/Footer.scss';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"Footer\">\r\n      <p>Developed in React by Eva Ferreras</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { setLocalStorage, getFromLocalStorage } from '../services/localstorage';\nimport Header from './Header';\nimport Landing from './Landing';\nimport ClocksPage from './ClocksPage';\nimport GameOver from './GameOver';\nimport Footer from './Footer';\nimport '../stylesheets/App.scss';\n\nconst dataLocal = getFromLocalStorage();\n\nfunction App() {\n  //STATE\n  //setup\n  const [totalMinutes, setTotalMinutes] = useState(dataLocal.totalMinutes);\n  const [incAfterEachPlay, setIncAfterEachPlay] = useState(\n    dataLocal.incAfterEachPlay\n  );\n  const [playNumber, setPlayNumber] = useState(dataLocal.playNumber);\n  const [incOfMinutes, setIncOfMinutes] = useState(dataLocal.incOfMinutes);\n  const [formIsFilled, setFormIsFilled] = useState(dataLocal.formIsFilled);\n  const [whitesForLeft, setWhitesForLeft] = useState(dataLocal.whitesForLeft);\n  //counters\n  const [whiteCounter, setWhiteCounter] = useState(dataLocal.whiteCounter);\n  const [blackCounter, setBlackCounter] = useState(dataLocal.blackCounter);\n  //game\n  const [afterFirstTurn, setAfterFirstTurn] = useState(\n    dataLocal.afterFirstTurn\n  );\n  const [whitesTurn, setWhitesTurn] = useState(dataLocal.whitesTurn);\n  const [numberOfPlays, setNumberOfPlays] = useState(dataLocal.numberOfPlays);\n  const [isStarted, setIsStarted] = useState(dataLocal.isStarted);\n  const [isStopped, setIsStopped] = useState(dataLocal.isStopped);\n\n  //HOOKS\n  useEffect(() => {\n    if (totalMinutes && incAfterEachPlay && playNumber && incOfMinutes) {\n      setFormIsFilled(true);\n    } else {\n      setFormIsFilled(false);\n    }\n  }, [totalMinutes, incAfterEachPlay, playNumber, incOfMinutes]);\n\n  useEffect(() => {\n    if (!isStarted) {\n      setWhiteCounter(totalMinutes * 600);\n      setBlackCounter(totalMinutes * 600);\n    }\n  }, [totalMinutes, isStarted]);\n\n  useEffect(() => {\n    if (isStarted && !isStopped) {\n      const interval = setInterval(() => {\n        if (whitesTurn && whiteCounter > 0) {\n          setWhiteCounter((whiteCounter) => whiteCounter - 1);\n        } else if (!whitesTurn && blackCounter > 0) {\n          setBlackCounter((blackCounter) => blackCounter - 1);\n        }\n      }, 100);\n      return () => clearInterval(interval);\n    }\n  }, [isStarted, whitesTurn, isStopped, whiteCounter, blackCounter]);\n\n  useEffect(() => {\n    if (isStarted) {\n      const handleKeyUp = () => {\n        setWhitesTurn(!whitesTurn);\n        setAfterFirstTurn(true);\n        setNumberOfPlays((numberOfPlays) => numberOfPlays + 1);\n      };\n      window.addEventListener('keyup', handleKeyUp);\n      return () => {\n        window.removeEventListener('keyup', handleKeyUp);\n      };\n    }\n  });\n\n  useEffect(() => {\n    if (isStarted) {\n      const handleTouchStart = () => {\n        setWhitesTurn(!whitesTurn);\n        setAfterFirstTurn(true);\n        setNumberOfPlays((numberOfPlays) => numberOfPlays + 1);\n      };\n      window.addEventListener('touchstart', handleTouchStart);\n      return () => {\n        window.removeEventListener('touchstart', handleTouchStart);\n      };\n    }\n  });\n\n  useEffect(() => {\n    if (whitesTurn && afterFirstTurn && !isStopped) {\n      setBlackCounter(\n        (blackCounter) => blackCounter + parseInt(incAfterEachPlay * 10)\n      );\n    } else if (!whitesTurn && afterFirstTurn && !isStopped) {\n      setWhiteCounter(\n        (whiteCounter) => whiteCounter + parseInt(incAfterEachPlay * 10)\n      );\n    }\n  }, [whitesTurn, incAfterEachPlay, afterFirstTurn, isStopped]);\n\n  useEffect(() => {\n    if (numberOfPlays === playNumber * 2) {\n      setWhiteCounter(\n        (whiteCounter) => whiteCounter + parseInt(incOfMinutes) * 600\n      );\n      setBlackCounter(\n        (blackCounter) => blackCounter + parseInt(incOfMinutes) * 600\n      );\n    }\n  }, [numberOfPlays, incOfMinutes, playNumber]);\n\n  useEffect(() => {\n    setLocalStorage(\n      totalMinutes,\n      incAfterEachPlay,\n      playNumber,\n      incOfMinutes,\n      formIsFilled,\n      whitesForLeft,\n      whiteCounter,\n      blackCounter,\n      whitesTurn,\n      isStarted,\n      isStopped,\n      afterFirstTurn,\n      numberOfPlays\n    );\n  });\n\n  //EVENT HANDLERS\n  const handleInputChange = (data) => {\n    if (isStarted) {\n      handleReset();\n    }\n    if (data.name === 'totalMinutes') {\n      setTotalMinutes(data.value);\n    } else if (data.name === 'incAfterEachPlay') {\n      setIncAfterEachPlay(data.value);\n    } else if (data.name === 'playNumber') {\n      setPlayNumber(data.value);\n    } else if (data.name === 'incOfMinutes') {\n      setIncOfMinutes(data.value);\n    }\n  };\n\n  const handlePredefinedSettings = (data) => {\n    handleReset();\n    setFormIsFilled(true);\n    setTotalMinutes(data.minutes);\n    setIncAfterEachPlay(data.seconds);\n    setPlayNumber('0');\n    setIncOfMinutes('0');\n  };\n\n  const handleClockColours = () => {\n    setWhitesForLeft((whitesForLeft) => !whitesForLeft);\n  };\n\n  const handleStart = () => {\n    setIsStarted(true);\n  };\n\n  const handleStop = () => {\n    setWhitesTurn((whitesTurn) => !whitesTurn);\n    setIsStopped(true);\n    setAfterFirstTurn(true);\n    setNumberOfPlays((numberOfPlays) => numberOfPlays + 1);\n  };\n\n  const handleContinue = () => {\n    setIsStopped(false);\n  };\n\n  const handleReset = () => {\n    setTotalMinutes('');\n    setIncAfterEachPlay('');\n    setPlayNumber('0');\n    setIncOfMinutes('0');\n    setFormIsFilled(false);\n    setWhitesForLeft(true);\n    setIsStarted(false);\n    setIsStopped(false);\n    setWhitesTurn(true);\n    setAfterFirstTurn(false);\n    setNumberOfPlays(0);\n  };\n\n  //JSX\n  return (\n    <>\n      <Header />\n      <Switch>\n        <>\n          <main className=\"App\">\n            <h1 className=\"App__title\">Chess clock</h1>\n            <Route exact path=\"/\">\n              <Landing\n                totalMinutes={totalMinutes}\n                incAfterEachPlay={incAfterEachPlay}\n                playNumber={playNumber}\n                incOfMinutes={incOfMinutes}\n                formIsFilled={formIsFilled}\n                handleInputChange={handleInputChange}\n                handlePredefinedSettings={handlePredefinedSettings}\n                handleReset={handleReset}\n              />\n            </Route>\n            <Route path=\"/game\">\n              {whiteCounter && blackCounter !== 0 ? (\n                <ClocksPage\n                  totalMinutes={totalMinutes}\n                  incAfterEachPlay={incAfterEachPlay}\n                  playNumber={playNumber}\n                  incOfMinutes={incOfMinutes}\n                  whiteCounter={whiteCounter}\n                  blackCounter={blackCounter}\n                  whitesForLeft={whitesForLeft}\n                  handleClockColours={handleClockColours}\n                  isStarted={isStarted}\n                  isStopped={isStopped}\n                  handleStart={handleStart}\n                  handleStop={handleStop}\n                  handleContinue={handleContinue}\n                />\n              ) : (\n                <GameOver\n                  whiteCounter={whiteCounter}\n                  blackCounter={blackCounter}\n                  handleReset={handleReset}\n                />\n              )}\n            </Route>\n          </main>\n        </>\n      </Switch>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const getFromLocalStorage = () => {\r\n  const dataLocal = JSON.parse(localStorage.getItem('dataLocal'));\r\n  return dataLocal !== null\r\n    ? dataLocal\r\n    : {\r\n        totalMinutes: '',\r\n        incAfterEachPlay: '',\r\n        playNumber: '0',\r\n        incOfMinutes: '0',\r\n        formIsFilled: false,\r\n        whitesForLeft: false,\r\n        whiteCounter: 0,\r\n        blackCounter: 0,\r\n        afterFirstTurn: false,\r\n        whitesTurn: true,\r\n        isStarted: false,\r\n        isStopped: false,\r\n        numberOfPlays: 0,\r\n      };\r\n};\r\n\r\nconst setLocalStorage = (\r\n  totalMinutes,\r\n  incAfterEachPlay,\r\n  playNumber,\r\n  incOfMinutes,\r\n  formIsFilled,\r\n  whitesForLeft,\r\n  whiteCounter,\r\n  blackCounter,\r\n  whitesTurn,\r\n  isStarted,\r\n  isStopped,\r\n  afterFirstTurn,\r\n  numberOfPlays\r\n) => {\r\n  const data = {\r\n    totalMinutes: totalMinutes,\r\n    incAfterEachPlay: incAfterEachPlay,\r\n    playNumber: playNumber,\r\n    incOfMinutes: incOfMinutes,\r\n    formIsFilled: formIsFilled,\r\n    whitesForLeft: whitesForLeft,\r\n    whiteCounter: whiteCounter,\r\n    blackCounter: blackCounter,\r\n    whitesTurn: whitesTurn,\r\n    isStarted: isStarted,\r\n    isStopped: isStopped,\r\n    afterFirstTurn: afterFirstTurn,\r\n    numberOfPlays: numberOfPlays,\r\n  };\r\n  localStorage.setItem('dataLocal', JSON.stringify(data));\r\n};\r\n\r\nexport { setLocalStorage, getFromLocalStorage };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from '../src/components/App';\nimport './stylesheets/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}